<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>国产Linux：中标麒麟NeoKylin——龙芯版操作系统实体机U盘安装详解</title>
      <link href="/2019/11/25/%E5%9B%BD%E4%BA%A7Linux%EF%BC%9A%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9FNeoKylin%E2%80%94%E2%80%94%E9%BE%99%E8%8A%AF%E7%89%88%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E4%BD%93%E6%9C%BAU%E7%9B%98%E5%AE%89%E8%A3%85%E8%AF%A6%E8%A7%A3/"/>
      <url>/2019/11/25/%E5%9B%BD%E4%BA%A7Linux%EF%BC%9A%E4%B8%AD%E6%A0%87%E9%BA%92%E9%BA%9FNeoKylin%E2%80%94%E2%80%94%E9%BE%99%E8%8A%AF%E7%89%88%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E4%BD%93%E6%9C%BAU%E7%9B%98%E5%AE%89%E8%A3%85%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><strong>本文地址：<a href="https://jeffcheng95.github.io/">https://jeffcheng95.github.io/</a></strong></p><p><strong>中标麒麟操作系统下载：<a href="http://www.cs2c.com.cn/index.php?id=177" target="_blank" rel="noopener">点击这里</a></strong><br><img src="https://img-blog.csdnimg.cn/20191125162953374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J1a25vdw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因为我们这里有一台龙芯实体机，所以我们就是在这个实体机上安装的 <strong>中标麒麟桌面操作系统软件（龙芯版 V7.0）</strong><br><strong>(注意：龙芯版 都必须要在指定芯片的机器上安装，不然会安装不成功！)</strong></p><a id="more"></a><h2 id="1-安装前准备"><a href="#1-安装前准备" class="headerlink" title="1.安装前准备"></a>1.安装前准备</h2><p>安装前先看看自己的机器对应的固件版本，如下图：<br><img src="https://img-blog.csdnimg.cn/20191125163838167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J1a25vdw==,size_16,color_FFFFFF,t_70" alt="对应固件表1"><br><img src="https://img-blog.csdnimg.cn/20191125163910591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J1a25vdw==,size_16,color_FFFFFF,t_70" alt="对应固件表2"><br>我所用的机器是龙芯3A台式机，所以我的安装固件方式两种都支持。按照我机器上默认的方式，我之后采用的是 <strong>昆仑固件桌面版</strong> 来进行引导的。</p><h2 id="2-制作启动盘"><a href="#2-制作启动盘" class="headerlink" title="2.制作启动盘"></a>2.制作启动盘</h2><p>因为没有光驱等原因，我选择了U盘启动的方式。<br>(1)首先确保U盘的大小不小于4G，其次制作启动盘时，保证机器上只有一个USB设备。<br>在随便一个<strong>Linux</strong>系统下插入U盘(我用的是CentOS7.3)，以超级用户权限查看当前U盘挂载的设备文件，这里我用的命令是 <strong>lsblk</strong>，查找到如图：<br><img src="https://img-blog.csdnimg.cn/20191125165137466.png" alt="lsblk结果"><br>可以看到我插入的U盘挂在<strong>/dev/sdb4</strong>这个设备文件下。<br>(2)准备格式化U盘<strong>(注意格式化前保存好数据，格式化会清空U盘内一切数据)</strong>，格式化时要将U盘格式化为<strong>ext3或ext4格式！</strong> 格式化命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext3 /dev/sdc</span><br></pre></td></tr></table></figure><p>或者直接界面操作，如图：<br><img src="https://img-blog.csdnimg.cn/20191125170511596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J1a25vdw==,size_16,color_FFFFFF,t_70" alt="格式化U盘"></p><p>(3)格式化完成后，执行下述命令，制作启动盘(以下载的镜像为例 NKLD-7.0_U2-LS64-REL-B054.iso)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># mkdir /mnt/iso /mnt/usb</span><br><span class="line"># mount -o loop NKLD-7.0_U2-LS64-REL-B054.iso /mnt/iso</span><br><span class="line"># mount /dev/sdb4 /mnt/usb/</span><br><span class="line"># cp /mnt/iso/ks.cfg /mnt/usb/</span><br><span class="line"># mkdir /mnt/usb/boot</span><br><span class="line"># cp /mnt/iso/boot/vmlinuz /mnt/iso/boot/initrd.img /mnt/usb/boot/</span><br><span class="line"># cp /mnt/iso/tools/USB-install/boot.* /mnt/iso/tools/USB-install/grub.cfg /mnt/usb/boot/</span><br><span class="line"># umount /mnt/iso</span><br><span class="line"># cp NKLD-7.0_U2-LS64-REL-B054.iso /mnt/usb/</span><br><span class="line"># sync</span><br><span class="line"># umount /mnt/usb/</span><br></pre></td></tr></table></figure><p>最后一步执行完后，启动盘就制作完了，完成后的界面如下：<br><img src="https://img-blog.csdnimg.cn/20191125171743529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J1a25vdw==,size_16,color_FFFFFF,t_70" alt="启动盘制作完成"></p><h2 id="3-修改启动盘的配置信息"><a href="#3-修改启动盘的配置信息" class="headerlink" title="3.修改启动盘的配置信息"></a>3.修改启动盘的配置信息</h2><p>制作完成后，还需要修改启动盘中的几个配置文件，使其符合中安装系统的机器的信息。<br>(1)首先把U盘插到最后安装系统的机器上，先用lsblk命令查看一下U盘挂载的/dev/下设备文件，比如我的龙芯机器上也是sdb4。<br>(2)然后还是在Linux中打开启动盘，需要修改以下几个文件</p><blockquote><p>/NeoKylin-Desktop/boot/boot.cfg<br>/NeoKylin-Desktop/boot/boot.conf<br>/NeoKylin-Desktop/boot/grub.cfg</p></blockquote><p>把这几个文件中的”sdb1”替换为”sdb4”,如图：<br><img src="https://img-blog.csdnimg.cn/20191125172917803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J1a25vdw==,size_16,color_FFFFFF,t_70" alt="替换路径"></p><h2 id="4-执行安装引导"><a href="#4-执行安装引导" class="headerlink" title="4.执行安装引导"></a>4.执行安装引导</h2><p>将制作修改完成的启动盘插入龙芯机器上，开机后，选择USB Install或者USB-CDROM Install，然后按键盘上“e”键进行编辑。按照下述内容编辑：</p><blockquote><p>……<br>linux /boot/vmlinuz repo=hd:/dev/sdb4:/*.iso  ks=hd:sdb4:/ks.cfg graphical quick<br>initrd /boot/initrd.img<br>boot</p></blockquote><p>编辑完成后，按下Ctrl+X，以保存退出并执行。<br>最后，就等着安装界面开始吧，一切按照默认流程就行。</p><h2 id="安装过程要特别注意的："><a href="#安装过程要特别注意的：" class="headerlink" title="安装过程要特别注意的："></a>安装过程要特别注意的：</h2><p><strong>1.要在Linux下制作。</strong><br><strong>2.PMON环境下U盘必须格式化成ext3， 昆仑固件环境下可以格式化成ext3、ext4(所以直接格式化成ext3就好)，将卷标设置为“NeoKylin-Desktop”。</strong><br><strong>3.在安装机器上U盘的位置不一定为sdb1，可以通过”ls /dev/sd*”命令仔细查看。</strong></p><h2 id="安装之后的界面："><a href="#安装之后的界面：" class="headerlink" title="安装之后的界面："></a>安装之后的界面：</h2><p><img src="https://img-blog.csdnimg.cn/20191125174607924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J1a25vdw==,size_16,color_FFFFFF,t_70" alt="安装成功"></p><h3 id="参考：官方资料"><a href="#参考：官方资料" class="headerlink" title="参考：官方资料"></a>参考：<a href="https://max.book118.com/html/2018/0825/6043122121001213.shtm" target="_blank" rel="noopener">官方资料</a></h3>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> NeoKylin安装 </tag>
            
            <tag> 国产操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C/C++:字符串比较——区分大小写和不区分大小</title>
      <link href="/2019/10/28/C-C-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%AF%94%E8%BE%83%E2%80%94%E2%80%94%E5%8C%BA%E5%88%86%E5%A4%A7%E5%B0%8F%E5%86%99%E5%92%8C%E4%B8%8D%E5%8C%BA%E5%88%86%E5%A4%A7%E5%B0%8F/"/>
      <url>/2019/10/28/C-C-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%AF%94%E8%BE%83%E2%80%94%E2%80%94%E5%8C%BA%E5%88%86%E5%A4%A7%E5%B0%8F%E5%86%99%E5%92%8C%E4%B8%8D%E5%8C%BA%E5%88%86%E5%A4%A7%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="C-C-字符串比较——区分大小写和不区分大小写"><a href="#C-C-字符串比较——区分大小写和不区分大小写" class="headerlink" title="C/C++ 字符串比较——区分大小写和不区分大小写"></a>C/C++ 字符串比较——区分大小写和不区分大小写</h1><p>在C/C++码农生涯，不可避免要使用字符串比较函数，比如匹配路径等需求。这篇文章将介绍字符串比较中区分大小写和不区分大小写所使用的函数。</p><a id="more"></a><h1 id="一、区分大小写"><a href="#一、区分大小写" class="headerlink" title="一、区分大小写"></a>一、区分大小写</h1><p>一般我们常用的字符串比较函数都是区分大小写的。<br>我们这里只介绍<strong>strcmp</strong>函数，在windows和linux下函数名和用法都一样。</p><blockquote><p>原型：extern int strcmp(const void *s1, const void *s2);<br>功能：用于比较两个字符串并根据比较结果返回整数。<br>用法：基本形式为strcmp(str1,str2)，若str1=str2，则返回零；若str1&lt;str2，则返回负数；若str1&gt;str2，则返回正数。</p></blockquote><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;syslib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *s1=<span class="string">"Hello,Programmers!"</span>;</span><br><span class="line"><span class="keyword">char</span> *s2=<span class="string">"Hello,programmers!"</span>;</span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line">clrscr();</span><br><span class="line">r = <span class="built_in">strcmp</span>(s1,s2);</span><br><span class="line"><span class="keyword">if</span>(!r)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1 and s2 are identical"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(r&lt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1 less than s2"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"s1 greater than s2"</span>);</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、不区分大小写"><a href="#二、不区分大小写" class="headerlink" title="二、不区分大小写"></a>二、不区分大小写</h1><p>不区分大小写的函数，在windows和linux平台下不一样。</p><h2 id="1、Windows平台下的stricmp"><a href="#1、Windows平台下的stricmp" class="headerlink" title="1、Windows平台下的stricmp"></a>1、Windows平台下的stricmp</h2><blockquote><p>原型：extern int stricmp(char <em>s1,char * s2);<br>功能：(*</em>不区分大小写**) 比较两个字符串并根据比较结果返回整数。<br>用法：与strcmp一样， stricmp(str1, str2);</p></blockquote><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *str1=<span class="string">"I am OldWolf"</span>;</span><br><span class="line"><span class="keyword">char</span> *str2=<span class="string">"I am Oldwolf"</span>;</span><br><span class="line"><span class="keyword">int</span> cmp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"原字符串分别为：\n%s\n%s\n\n"</span>,str1,str2);</span><br><span class="line">cmp=stricmp(str1,str2);</span><br><span class="line"><span class="keyword">if</span> (cmp!=<span class="number">0</span>)</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"stricmp比较字符串不相同！\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"stricmp比较字符串相同！\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、Linux平台下的strcasecmp"><a href="#2、Linux平台下的strcasecmp" class="headerlink" title="2、Linux平台下的strcasecmp"></a>2、Linux平台下的strcasecmp</h2><blockquote><p>原型： int strcasecmp (const char <em>s1, const char <em>s2);<br>功能：(</em></em>不区分大小写**) 比较两个字符串并根据比较结果返回整数。<br>用法：与strcmp一样， strcasecmp(str1, str2);</p></blockquote><p>示例：</p><pre><code class="C++"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><span class="function"></span>{    <span class="keyword">char</span> *a=<span class="string">"aBcDeF"</span>;    <span class="keyword">char</span> *b=<span class="string">"AbCdEf"</span>;    <span class="keyword">if</span>(!strcasecmp(a,b))        <span class="built_in">printf</span>(<span class="string">"%s=%s/n"</span>,a,b);    <span class="keyword">return</span> <span class="number">0</span>;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> Linux </tag>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运行单例应用-文件锁方式.md</title>
      <link href="/2019/10/24/%E8%BF%90%E8%A1%8C%E5%8D%95%E4%BE%8B%E5%BA%94%E7%94%A8-%E6%96%87%E4%BB%B6%E9%94%81%E6%96%B9%E5%BC%8F-md/"/>
      <url>/2019/10/24/%E8%BF%90%E8%A1%8C%E5%8D%95%E4%BE%8B%E5%BA%94%E7%94%A8-%E6%96%87%E4%BB%B6%E9%94%81%E6%96%B9%E5%BC%8F-md/</url>
      
        <content type="html"><![CDATA[<h1 id="应用单例启动（采用文件锁方式）"><a href="#应用单例启动（采用文件锁方式）" class="headerlink" title="应用单例启动（采用文件锁方式）"></a>应用单例启动（采用文件锁方式）</h1><hr><p>有时候我们的应用程序在系统中可能只允许<strong>启动一个</strong>(比如服务程序)，怎么实现这种需求呢？</p><a id="more"></a><p><strong>思想</strong>：我们可以采用文件锁的方式，因为通过文件锁，可以保证同一时刻只有一个应用能占得文件资源，获取锁成功的可以执行，如果被其他进程占用时就不能执行。</p><p><strong>准备</strong>：有了思路后，剩下就是怎么操作设置文件锁了。用到网络锁，就不可避免要使用<a href="https://baike.baidu.com/item/fcntl/6860021?fr=aladdin" target="_blank" rel="noopener">fcntl</a>函数。</p><blockquote><ul><li>fcntl函数，调用可以用来对已打开的文件描述符进行各种控制操作以改变已打开文件的的各种属性</li><li>fcntl函数介绍如下：<br><img src="http://s1.knowsky.com/20170227/1zx2pe0xx1o55.png" alt="fcntl函数"></li></ul><p>fcntl的返回值与命令有关。如果出错，所有命令都返回-1，同时错误码记录在errno中；如果成功则返回某个其他值。下列四个命令有特定返回值：F_DUPFD、F_GETFD、F_GETFL、F_GETOWN.第一个返回新的文件描述符，接下来的两个返回相应标志，最后一个返回一个正的进程ID或负的进程组ID。<br>上述我们用到的是<strong>F_SETLK</strong>。如果<strong>锁被其他进程占用</strong>导致无法设定锁，则返回-1，errno错误代码为<strong>EACCES</strong>或<strong>EAGAIN</strong>。<br>当fcntl用于管理文件记录锁的操作时，第三个参数指向一个struct flock *lock的结构体，如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">struct flock</span><br><span class="line">&#123;</span><br><span class="line">    l_type;    /*锁的类型*/</span><br><span class="line">    l_whence;  /*偏移量的起始位置：SEEK_SET,SEEK_CUR,SEEK_END*/</span><br><span class="line">    l_start;     /*加锁的起始偏移*/</span><br><span class="line">    l_len;    /*上锁字节*/</span><br><span class="line">    l_pid;   /*锁的属主进程ID */</span><br><span class="line">&#125;; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><img src="http://s1.knowsky.com/20170227/sjygkkw2x5y55.png" alt="flock结构体"></p><p>如果要加锁整个文件，通常的方法是将l_start 设置为0，l_whence 设置为SEEK_SET,l_len设置为0.</p></blockquote><p><strong>实现</strong>:基本的一些知识清楚了之后，就要写代码实现了，下面的代码是我写的一个小demo。<br>主要部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">struct flock flc;</span><br><span class="line">flc.l_type = F_WRLCK;  // write lock</span><br><span class="line">flc.l_start = 0;</span><br><span class="line">flc.l_whence = SEEK_SET;</span><br><span class="line">flc.l_len = 0;   //lock the whole file</span><br><span class="line">if(fcntl(fd, F_SETLK, &amp;flc) &lt; 0)</span><br><span class="line">&#123;</span><br><span class="line">if(errno == EACCES || errno == EAGAIN)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;This process already exist!\n&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">perror(&quot;Set FileLock Failed!&quot;);</span><br><span class="line">exit(1);</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;Process will run!\n&quot;);</span><br></pre></td></tr></table></figure><p>代码地址：<a href="https://github.com/JeffCheng95/C-C-Demo/tree/master/%E5%BA%94%E7%94%A8%E5%8D%95%E4%BE%8B%E8%BF%90%E8%A1%8C" target="_blank" rel="noopener">https://github.com/JeffCheng95/C-C-Demo/tree/master/应用单例运行</a></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用单例运行 </tag>
            
            <tag> 文件锁 </tag>
            
            <tag> fcntl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux：解决应用程序/动态库中与加载的其他动态库的函数重名问题</title>
      <link href="/2019/10/22/Linux%EF%BC%9A%E8%A7%A3%E5%86%B3%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F-%E5%8A%A8%E6%80%81%E5%BA%93%E4%B8%AD%E4%B8%8E%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%85%B6%E4%BB%96%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E5%87%BD%E6%95%B0%E9%87%8D%E5%90%8D%E9%97%AE%E9%A2%98/"/>
      <url>/2019/10/22/Linux%EF%BC%9A%E8%A7%A3%E5%86%B3%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F-%E5%8A%A8%E6%80%81%E5%BA%93%E4%B8%AD%E4%B8%8E%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%85%B6%E4%BB%96%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E5%87%BD%E6%95%B0%E9%87%8D%E5%90%8D%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux：解决应用程序-动态库中与加载的其他动态库的函数-重名问题"><a href="#Linux：解决应用程序-动态库中与加载的其他动态库的函数-重名问题" class="headerlink" title="Linux：解决应用程序/动态库中与加载的其他动态库的函数 重名问题"></a>Linux：解决应用程序/动态库中与加载的其他动态库的函数 重名问题</h1><h4 id="问题-："><a href="#问题-：" class="headerlink" title="问题 ："></a>问题 ：</h4><p>今天客户提出来一个大问题，Linux版本的一段程序，显示正常的pdf在识别的时候，程序崩了，这个不应该啊。就算pdf是坏的，那也应该有错误码，而不应该崩掉啊。  </p><a id="more"></a><p>在复现的过程中，gdb调试发现，在我们的动态库A.so中有个接口叫F_Recg()，我们调用的底层还有个用的别人提供的动态库B.so，其中有个函数也叫F_Recg()，最终的问题就是<strong>本应该进入A.so中F_Recg()程序进入到了B.so中的F_Recg()了</strong>。    </p><p>别人的动态库我们也不能改，只能我们自己想办法看看怎么指定的调用我们A.so中的函数了。  </p><p>刚开始尝试了<strong>visibility</strong>(visibility用于设置动态链接库中函数的可见性，将变量或函数设置为hidden，则该符号仅在本so中可见，在其他库中则不可见；若设置为default,则在其他库中也可见。使用方法参见：<a href="https://blog.csdn.net/buknow/article/details/102629221" target="_blank" rel="noopener">visibility</a>)但是没有效果。<br>所幸后来在同事大佬的帮助下，我们找到了一种gcc编译选项的方法：</p><blockquote><p>-Wl,-Bsymbolic    （不要少逗号）<br>这个是在gcc/g++编译的一个选项，其中<strong>Wl</strong>表示将紧跟其后的参数，传递给连接器ld。<strong>Bsymbolic</strong>表示强制采用本地的全局变量定义，这样就不会出现动态链接库的全局变量定义被应用程序/动态链接库中的同名定义给覆盖了！</p></blockquote><h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><p>添加gcc / g++编译选项： -Wl,-Bsymbolic     </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> Linux </tag>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md文件在github上不能正确换行</title>
      <link href="/2019/09/29/%C2%96md%E6%96%87%E4%BB%B6%E5%9C%A8github%E4%B8%8A%E4%B8%8D%E8%83%BD%E6%AD%A3%E7%A1%AE%E6%8D%A2%E8%A1%8C-md/"/>
      <url>/2019/09/29/%C2%96md%E6%96%87%E4%BB%B6%E5%9C%A8github%E4%B8%8A%E4%B8%8D%E8%83%BD%E6%AD%A3%E7%A1%AE%E6%8D%A2%E8%A1%8C-md/</url>
      
        <content type="html"><![CDATA[<h1 id="md文件在github上不能正确换行"><a href="#md文件在github上不能正确换行" class="headerlink" title="md文件在github上不能正确换行"></a>md文件在github上不能正确换行</h1><h4 id="问题-："><a href="#问题-：" class="headerlink" title="问题 ："></a>问题 ：</h4><p>使用md文件编辑一整段内容，在编辑器中正常显示<br>但上传github后，文档没有正确显示换行   </p><a id="more"></a> <blockquote><h1 id="MacCpuIDInfoTool"><a href="#MacCpuIDInfoTool" class="headerlink" title="MacCpuIDInfoTool"></a>MacCpuIDInfoTool</h1><h3 id="特定场景应用：机器及授权信息查看工具"><a href="#特定场景应用：机器及授权信息查看工具" class="headerlink" title="特定场景应用：机器及授权信息查看工具"></a>特定场景应用：机器及授权信息查看工具</h3><p><strong>功能描述</strong>：本MFC项目为读取特定机器码文件和授权信息文件加解密小工具，运用的是openssl开源库。<br><strong>目录结构</strong>：<br>　|—-<strong>include</strong>：项目所需的openssl开源库头文件<br>　|—-<strong>lib32</strong>：项目依赖的openssl静态库文件(32位)<br>　|—-<strong>lib64</strong>：同上(64位)<br>　|—-<strong>res</strong>：应用程序的图标等资源文件<br>　|—-<strong>Test</strong>：提供的测试文件<br>　|　　　|—-GetLicenseInfo：机器码文件<br>　|　　　|—-LicenceFile：授权信息文件<br>　|—-<strong><em>.cpp/ \</em>.h/ *.vcxproj</strong>：源文件、头文件、项目文件等</p></blockquote><h4 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h4><p>github上需要在每一行末尾加上至少2个空格，再输入换行，不然换行不能正确显示    </p><h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><p>在需要换行的每一句后面加上两个空格，再使用换行即可。   </p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown语法 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+NexT博客主题优化：在文章底部增加作者版权信息</title>
      <link href="/2019/09/23/hexo%E4%BC%98%E5%8C%96-%E5%A2%9E%E5%8A%A0%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/"/>
      <url>/2019/09/23/hexo%E4%BC%98%E5%8C%96-%E5%A2%9E%E5%8A%A0%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-NexT博客主题优化：在文章底部增加作者版权信息"><a href="#Hexo-NexT博客主题优化：在文章底部增加作者版权信息" class="headerlink" title="Hexo+NexT博客主题优化：在文章底部增加作者版权信息"></a>Hexo+NexT博客主题优化：在文章底部增加作者版权信息</h1><hr><h4 id="实现效果图："><a href="#实现效果图：" class="headerlink" title="实现效果图："></a>实现效果图：</h4><p><img src="https://img-blog.csdnimg.cn/20190923152754830.jpg#pic_center" alt="版权信息"></p><a id="more"></a><h4 id="步骤如下："><a href="#步骤如下：" class="headerlink" title="步骤如下："></a>步骤如下：</h4><blockquote><p>1、 在主题目录 <code>next/layout/_macro/</code> 下，新增文件<code>my-copyright.swig</code> ，填入以下内容：<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.my_copyright.enabled %&#125;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"my_post_copyright"</span>&gt;</span><br><span class="line">&lt;div style=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span><br><span class="line">------ 版权声明 ------&lt;/div&gt;</span><br><span class="line"> &lt;script src=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;"&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line"> &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href="/" title="访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line"> &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(<span class="string">"YYYY年MM月DD日 - HH:mm"</span>) &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"> &lt;p&gt;&lt;span&gt;最后更新:&lt;/</span>span&gt;&#123;&#123; page.updated.format(<span class="string">"YYYY年MM月DD日 - HH:mm"</span>) &#125;&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"> &lt;p&gt;&lt;span&gt;原始链接:&lt;/</span>span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;" title="&#123;&#123; page.title &#125;&#125;"&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"copy-path"</span>  title=<span class="string">"点击复制文章链接"</span>&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="&#123;&#123; page.permalink &#125;&#125;"  aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line"> &lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"> &lt;p&gt;&lt;span&gt;许可协议:&lt;/</span>span&gt;&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;<span class="regexp">/p&gt;  </span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">   <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</span><br><span class="line">   $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       swal(&#123;   </span><br><span class="line">         title: <span class="string">""</span>,   </span><br><span class="line">         text: <span class="string">'复制成功'</span>,</span><br><span class="line">         icon: <span class="string">"success"</span>, </span><br><span class="line">         showConfirmButton: <span class="literal">true</span></span><br><span class="line">         &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">   &#125;);  </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>2、在主题目录 <code>next/source/css/_common/components/post/</code> 下，新增文件<code>my-post-copyright.styl</code> ，填入以下内容：<br> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line"> <span class="attribute">max-width</span>: <span class="number">45em</span>;</span><br><span class="line"> <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span><br><span class="line"> <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span><br><span class="line"> <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span><br><span class="line"> <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line"> <span class="attribute">word-break</span>: break-all;</span><br><span class="line"> <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line"> <span class="attribute">display</span>: inline-block;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">5.2em</span>;</span><br><span class="line"> <span class="attribute">color</span>: <span class="number">#b5b5b5</span>;</span><br><span class="line"> <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span><br><span class="line"> <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line"> <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: <span class="number">#a3d2a3</span>;</span><br><span class="line"> <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"> <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span><br><span class="line"> <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line"> <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line"> +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"> <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line"> <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>3、修改<code>next/layout/_macro/post.swig</code>，在代码<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-footer"</span>&gt;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>这段代码第一次出现之前的地方，添加如下代码段：<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">     &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">       &#123;% include <span class="string">'my-copyright.swig'</span> %&#125;</span><br><span class="line">     &#123;% endif %&#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>4、修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"my-post-copyright"</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>5、在主题配置文件<code>_config.yml</code>中添加字段<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“版权声明”标记</span><br><span class="line">my_copyright:</span><br><span class="line"> enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p> 6、完成以上设置之后，执行命令保存重新生成<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -g</span><br></pre></td></tr></table></figure></p></blockquote><p>以上就是添加“版权声明”的所有步骤了，有问题记得一起交流，喜欢的老铁记得双击666！😀</p><hr>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT主题优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cmd Markdown 向导</title>
      <link href="/2019/09/18/example_md/"/>
      <url>/2019/09/18/example_md/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎使用-Cmd-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd Markdown 编辑阅读器"></a>欢迎使用 Cmd Markdown 编辑阅读器</h1><hr><p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。</p><a id="more"></a><p>您可以使用 Cmd Markdown：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cuenlidWx1by5jb20vc3RhdGljL2ltZy9sb2dvLnBuZw?x-oss-process=image/format,png" alt="cmd-markdown-logo"></p><p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p><h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="noopener">Windows/Mac/Linux 全平台客户端</a></h3><blockquote><p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p></blockquote><hr><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表" target="_blank" rel="noopener">Todo 列表</a></h3><ul><li><input disabled type="checkbox"> 支持以 PDF 格式导出文稿</li><li><input disabled type="checkbox"> 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li><input checked disabled type="checkbox"> 新增 Todo 列表功能</li><li><input checked disabled type="checkbox"> 修复 LaTex 公式渲染问题</li><li><input checked disabled type="checkbox"> 新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="noopener">流程图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flowchat</span><br><span class="line">st=&gt;start: Start</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="noopener">序列图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图" target="_blank" rel="noopener">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table><thead><tr><th>项目</th><th align="right">价格</th><th align="center">数量</th></tr></thead><tbody><tr><td>计算机</td><td align="right">$1600</td><td align="center">5</td></tr><tr><td>手机</td><td align="right">$12</td><td align="center">12</td></tr><tr><td>管线</td><td align="right">$1</td><td align="center">234</td></tr></tbody></table><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="noopener">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cuenlidWx1by5jb20vc3RhdGljL2ltZy90b29sYmFyLWVkaXRvci5wbmc?x-oss-process=image/format,png" alt="tool-editor"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cuenlidWx1by5jb20vc3RhdGljL2ltZy90b29sYmFyLW1hbmFnZXIuanBn?x-oss-process=image/format,png" alt="tool-manager"></p><p>通过管理工具栏可以：</p><p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cuenlidWx1by5jb20vc3RhdGljL2ltZy90b29sYmFyLXJlYWRlci5qcGc?x-oss-process=image/format,png" alt="tool-manager"></p><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cuenlidWx1by5jb20vc3RhdGljL2ltZy9maWxlLWxpc3QucG5n?x-oss-process=image/format,png" alt="file-list"></p><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="noopener">@ghosert</a><br>2016 年 07月 07日    </p><p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO下载安装与配置详解</title>
      <link href="/2019/09/18/first-blog/"/>
      <url>/2019/09/18/first-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-Hexo-Github搭建免费个人博客"><a href="#使用-Hexo-Github搭建免费个人博客" class="headerlink" title="使用 Hexo+Github搭建免费个人博客"></a>使用 Hexo+Github搭建免费个人博客</h1><hr><p>参考资料：</p><p>Hexo下载安装——<a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a><br>主题NexT——<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a><br>Hexo攻略-添加分类和标签——<a href="https://www.jianshu.com/p/e17711e44e00" target="_blank" rel="noopener">https://www.jianshu.com/p/e17711e44e00</a><br>Hexo插件-百度数据分析——<a href="https://tongji.baidu.com/web/10000065783/homepage/index" target="_blank" rel="noopener">https://tongji.baidu.com/web/10000065783/homepage/index</a></p><p>本人博客预览——JeffCheng95.github.io</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/18/hello-world/"/>
      <url>/2019/09/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
